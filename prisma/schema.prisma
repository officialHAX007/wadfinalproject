generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role     @default(BUYER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  buyer     Buyer?
  artist    Artist?
}

enum Role {
  ADMIN
  ARTIST
  BUYER
}

model Artist {
  id            String   @id @default(uuid())
  name          String
  bio           String?
  profileImage  String?
  contactEmail  String?
  socialLinks   String[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user          User?    @relation(fields: [userId], references: [id])
  userId        String?  @unique

  artworks      Artwork[]
}

model Artwork {
  id           String   @id @default(uuid())
  title        String
  description  String?
  image        String?
  price        Decimal   @db.Decimal(10,2)
  isAvailable  Boolean   @default(true)
  tags         String[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  artist       Artist    @relation(fields: [artistId], references: [id])
  artistId     String

  orderItems   OrderItem[]
  wishlistedBy Wishlist[]
}

model Buyer {
  id                String   @id @default(uuid())
  name              String
  email             String   @unique
  profileImage      String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user              User?    @relation(fields: [userId], references: [id])
  userId            String?  @unique

  purchasedOrders   Order[]
  wishlist          Wishlist[]
}

model Wishlist {
  id        String  @id @default(uuid())
  buyer     Buyer   @relation(fields: [buyerId], references: [id])
  buyerId   String
  artwork   Artwork @relation(fields: [artworkId], references: [id])
  artworkId String

  @@unique([buyerId, artworkId])
}

model Order {
  id           String      @id @default(uuid())
  buyer        Buyer       @relation(fields: [buyerId], references: [id])
  buyerId      String
  status       OrderStatus @default(PENDING)
  total        Decimal     @db.Decimal(10,2)
  createdAt    DateTime    @default(now())

  items        OrderItem[]
}

model OrderItem {
  id         String   @id @default(uuid())
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    String
  artwork    Artwork  @relation(fields: [artworkId], references: [id])
  artworkId  String
  unitPrice  Decimal  @db.Decimal(10,2)
  quantity   Int      @default(1)
}

enum OrderStatus {
  PENDING
  PAID
  CANCELLED
}
